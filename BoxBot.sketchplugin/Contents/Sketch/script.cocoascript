//@import "library.cocoascript";

var onRun = function(context) {

  var showCenter = false;
  var app = NSApplication.sharedApplication()
  var doc = context.document;
  var pages = doc.pages();

  var moves = [];
  var pagesKeys = [];
  var pagesCords = [];
  for (var p = 0; p < pages.count(); p++) {
    var page = pages.objectAtIndex(p);
    var pageName = page.name();
    var artboard = page.artboards().objectAtIndex(0);

    // group all centerdots
    var centerDots = MSLayerGroup.alloc().init()
    centerDots.setName("centers");
    centerDots.frame = MSRect.rectWithRect(NSMakeRect(0,0,artboard.frame().width(),artboard.frame().height()));

    // get coords from all layers
    var pageKeys = [];
    var pageCords = {};
    var layers = artboard.layers();
    for (var l = 0; l < layers.count(); l++) {
      var layer = layers.objectAtIndex(l);

      if (layer.name() == "centers") {
        artboard.removeLayer(layer);
        continue;
      }

      var x = layer.frame().x();
      var y = layer.frame().y();
      var w = layer.frame().width();
      var h = layer.frame().height();
      var a = layer.rotation();

      if (layer.isFlippedVertical() == 1 && layer.isFlippedHorizontal() == 1) {
        if (a == 0) a = 180;
        else if (a == 180) a = 0;
        else if (a == 270) a = 90;
        else if (a == 90) a = 270;

      } else if (layer.isFlippedVertical() == 1) {
        if (a == 0) a = 90;
        else if (a == 90) a = 0;
        else if (a == 180) a = 270;
        else if (a == 270) a = 180;

      } else if (layer.isFlippedHorizontal() == 1) {
        if (a == 0) a = 270;
        else if (a == 270) a = 0;
        else if (a == 90) a = 180;
        else if (a == 180) a = 90;
      }


      var centerX = (w/3) + x;
      var centerY = (h/3) + y;

      if (a == 90) {
        centerX = (w/3) + x;
        centerY = (y + h) - (h/3);
      }
      if (a == 180) {
        centerX = (x + w) - (w/3);
        centerY = (y + h) - (h/3);
      }
      if (a == 270) {
        centerX = (x + w) - (w/3);
        centerY = (h/3) + y;
      }
      centerX = Math.round(centerX);
      centerY = Math.round(centerY);

      // add centerdot for layer
      if (showCenter) {
        var centerDot = MSOvalShape.alloc().init();
        centerDot.frame = MSRect.rectWithRect(NSMakeRect(centerX,centerY,1,1));
        centerDot.setName(layer.name() + "-center");
        var shapeGroup=MSShapeGroup.shapeWithPath(centerDot);
        var fill = shapeGroup.style().fills().addNewStylePart();
        fill.color = MSColor.colorWithSVGString("#dd2020");
        centerDots.addLayers([shapeGroup]);
      }

      var posKey = centerX +"-"+ centerY +"-"+ a;
      //log(p +":"+ l +" "+ posKey +" "+ layer.name() +" h:"+ layer.isFlippedHorizontal() +" v:"+ layer.isFlippedVertical());
      pageKeys.push(posKey);
      pageCords[posKey] = {
        x: centerX,
        y: centerY,
        a: a
      };
    }
    // compare coords with previous page to get from and to pos
    if (p > 0) {
      var prevPageKeys = pagesKeys[p-1];
      var prevPageCords = pagesCords[p-1];

      // from pos
      var fromPos = null;
      for (var k = 0; k < prevPageKeys.length; k++) {
        var key = prevPageKeys[k];
        if (pageCords[key] == null) {
          if (fromPos != null) {
            // Error more then one move in page
            app.displayDialog_withTitle("More then one move on page "+ (p+1), "Error")
            return;
          } else {
            fromPos = prevPageCords[key];
          }
        }
      }

      // to pos
      var toPos = null;
      for (var k = 0; k < pageKeys.length; k++) {
        var key = pageKeys[k];
        if (prevPageCords[key] == null) {
          toPos = pageCords[key];
          break;
        }
      }
      // output move command as from -> to
      moves.push({ page: p, pageName: pageName, from: fromPos, to: toPos });
    }

    pagesKeys[p] = pageKeys;
    pagesCords[p] = pageCords;

    // add the centerdot group to artboard
    if (showCenter) {
      artboard.addLayers([centerDots]);
    }
  }
  // log(moves);

  // output to NC coordinate file
  //Xx Yx Ax
  //M9 (mag off)
  //Z0 (down)
  //M8 (mag on)
  //Z10 (up)

  var output = "";
  for (var m = 0; m < moves.length; m++) {
    var pos = moves[m];

    // from
    output += "X"+ pos.from.x +" Y"+ pos.from.y +" A"+ pos.from.a +"\n";
    output += "M9\n"; // magnet off
    output += "Z0\n"; // down
    output += "M8\n"; // magnet on
    output += "Z10\n"; // up
    output += "\n";

    // to
    output += "X"+ pos.to.x +" Y"+ pos.to.y +" A"+ pos.to.a +"\n";
    output += "Z0\n"; // down
    output += "M9\n"; // magnet off
    output += "Z10\n"; // up
    output += "\n";

  }

  var savePanel = [NSSavePanel savePanel];
  [savePanel setNameFieldStringValue:@"moves"];
  savePanel.allowedFileTypes = [@"nc"];
  var result = savePanel.runModal();
  if (result == NSOKButton) {
    var saveURL = [[savePanel URL] path];
    var fileData = [NSString stringWithString:output];
    [fileData writeToFile:saveURL atomically:false];
  }

};
